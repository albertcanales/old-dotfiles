#!/bin/bash

# Automates adding or removing monitors, updating bspwm on the process
# Requires: xrandr, bspc, xdotool, arandr

LAPTOP=eDP-1
EXTERNAL=HDMI-1

STATUS_FILE="$HOME/bin/.monitors_status"

function desktop_mode {
    xrandr --output eDP-1 --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI-1 --primary --mode 1920x1080 --pos 1920x0 --rotate normal --output DP-1 --off
    bspc monitor $LAPTOP -d 1 2 3 4
    bspc monitor $EXTERNAL -d 5 6 7 8 9 10
    xdotool mousemove 2880 490
    echo desktop > $STATUS_FILE 
}

function laptop_mode {
    xrandr --output eDP-1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI-1 --off --output DP-1 --off
    bspc monitor $LAPTOP -d 1 2 3 4 5 6 7 8 9 10
    xdotool mousemove 960 490
    echo laptop > $STATUS_FILE
}

function auto {
    if [[ $(xrandr -q | grep "$EXTERNAL connected") ]]; then
        desktop_mode
    else
        laptop_mode
    fi
}

if [[ $# -gt 0 ]]; then
    option=$1
    if [[ $option == "status" ]]; then
        cat $STATUS_FILE
    elif [[ $option == "desktop" ]]; then
        desktop_mode
    elif [[ $option == "laptop" ]]; then
        laptop_mode
    else # Custom
        echo "Opening arandr..."
        arandr
        for monitor in $(xrandr -q | grep " connected" | cut -d " " -f 1); do
            read -p "Desktops for monitor $monitor: " desktops
            bspc monitor $monitor -d $desktops
        done
        echo custom > $STATUS_FILE
    fi
else
    auto
fi
   
